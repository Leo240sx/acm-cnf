apiVersion: v1
data:
  kubeconfig: apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpVENDQW5HZ0F3SUJBZ0lJTzM0SWkrZ0tiMTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qQXhPVEE0TURreU1CNFhEVEl3TVRBd05URTBORFEwTkZvWApEVEl5TVRBd05URTBORFEwTlZvd05ERXlNREFHQTFVRUF3d3BLaTVoY0hCekxtTnVaakl3TG1Oc2IzVmtMbXhoCllpNWxibWN1WW05ekxuSmxaR2hoZEM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREJVL3lJbHVVazV4REd2YWpzQjIwME5CWGlDb1RPQmNhQ2wyZTNFN1UydHNNTS85SzdLUVpiWVBNbApUenhuNVVEWGdyNnR6bXZtYjB3Yi9kUnBEK3ZRV2dqdVZkVERlbGp6STh3aUVwbWRwRXBDMkJENVhEL0svYzNpCm14TmxVV2xZYzZQc3dVNW50bHZaZm9weG9NT1FsL2xSSExLeGZQYzFTSFYzcmtMaW5yVnVYMzl6WEliSk0wbzYKaXdBeVhMMlJ6cXFvc3NOUHlCOGs1aDFQRWJ5dFdLZ1NKRDRueE12QVBoTkJDRmdOS0NFeVlGUFdCQ2xxWWRkUgpqWTRRQy9lQ3F4M0lNblptMjhScEF2ek9aVU51Zk9sM0hJNGhoZ2lFUC9xbEdjbEhTOU5FT2UyQnQ0NzNEa1dWCmNHUFZTYjNmNTU3L05lTUc4NmNpTUxrREk0Z25BZ01CQUFHamdhd3dnYWt3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkp2TQprNDRBSTJBYWtrV21ESWJDRlg1d0QzMjVNQjhHQTFVZEl3UVlNQmFBRkQ2bmJCK21wVkFvQmlwOUtEa0hwazA2CkdINHVNRFFHQTFVZEVRUXRNQ3VDS1NvdVlYQndjeTVqYm1ZeU1DNWpiRzkxWkM1c1lXSXVaVzVuTG1KdmN5NXkKWldSb1lYUXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVBHQjQ0elRORENVSjQyVTVVZ0p6T1lDWgpaS3hDQW9KdFlGcGc1RDFwcGQ4UTlHY3hyVU1pNzNxNnVSVWZMUkg0emNCb2xFQVNZa2dBL25yYWJ1bzJpTnpiCjg2Snk1R05YMWlHMU9ray9OdGMzS3ZySm1zTTl6NzQvRGFDU3UzZEZMZHBFejF4UmhCTEkySlZydlRmN1g0dmoKcHdJdjlDSWNEcWxRd0p5dVBOUncvZmV6VkZqUUR2cExFK0RxRUNMZVl5R0ZPcnJuSWdYV0hQS1ZqZTAxWEZSRApVYnZEK3l6TjlBdEFvejlJaERvRFFwNjRtSnJ1SnkveU40ZWxUYVlEYWpXN2N0MWVmZXRucGV0cW5lMEp3ejB0CnlDVTdaWXc3WEI5S2hCME9vMkR5R2d5OGc0VmVybUwvbVhGZnZaWndseU01cU5pWExaZjMrMXlCR1NlKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERERDQ0FmU2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUyTURFNU1EZ3dPVEl3SGhjTk1qQXhNREExTVRReU9ERXhXaGNOTWpJeE1EQTEKTVRReU9ERXlXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMk1ERTVNRGd3T1RJdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeXozUHZxTzd0WTh6TExkR2wwNmhQCjVpeEZNYmpwd3IyT2JkMmJya0ZYV05icWMwSGMyUllTWlFic2tkMGNwaEZiTUNXYlV6UXl2Z1ZkQjRyQU81Qi8KUzd5SmVBNytCSnFLNGZBalUwUzlORVNVSWRXS1orOWtRbVMvZ3Qwc2YvYVJRWE9vanlnWFZxMGZVaG9adHBHTQpjb3cvSmY3UmNaNFo1UVV2b21hY0NtYzRLaDg3bGJYaGUvSTFUczFRR2gzUGxka1RrcnRpdEpTVjJGUVI5QWpCCjdpMWxGZHowOVBwWGtJbWdDUEMvOGY0ZHluRW1BQWd2Zy9teDU4ZlZtLzVtZ1RONDhFRzE1T0tYLzRnbFYzQk4KL0lZYS9Xc1BmcjJ0STByU0xvaWlBbndGMUtrZWVNem0yZTFad1RTcmRxV05mZ1VFUVpHWGVVeHNyWnRZRTkwLwpBZ01CQUFHalJUQkRNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHCkExVWREZ1FXQkJRK3Ayd2ZwcVZRS0FZcWZTZzVCNlpOT2hoK0xqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKUHNmVVF5TE1rT05QNk4rTVVuenJNWS82bkdqMGxKcllDbHlDd1pjT1Y0bnNLSk1QekwvM0xSeEliMmNVdjY4bgpZNndzY1p3dSt5dUZmTHRGNnZqQlpkcHpSbW5JRHR0Uk9iMlZ0d3hHUUhHSjNaQ2VQVWxNTWFscmtNcS95UEF3ClBuM3VscFZNMEdNQzc2bXpDQ0g5cEd1bERyM3JOY09ueFArRzBFNmdhZndvMEFDR1BIMS81NVI3WUdWQTZObVcKdmhzUlRrYnBhSjhtcDNHbUdpTUNVY0Z0cUlHcnljalZ2djVyaElpVGhBbDh5SFMwWEhJSURVc01jZnNCTTNUZApyRGE0TWJxVVlQazZDSnhQd0M5QjZlT3RRbDlyMUR6R0NKT3E4d1dtdzJEcXpzbUE0eDhDK2VyUXRtOTNHSS8yCkJqWVNFQWZQR3RFOE9jNHNUNzRLVlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEaVRDQ0FuR2dBd0lCQWdJSU8zNElpK2dLYjEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFa01DSUdBMVVFCkF3d2JhVzVuY21WemN5MXZjR1Z5WVhSdmNrQXhOakF4T1RBNE1Ea3lNQjRYRFRJd01UQXdOVEUwTkRRME5Gb1gKRFRJeU1UQXdOVEUwTkRRME5Wb3dOREV5TURBR0ExVUVBd3dwS2k1aGNIQnpMbU51WmpJd0xtTnNiM1ZrTG14aApZaTVsYm1jdVltOXpMbkpsWkdoaGRDNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURCVS95SWx1VWs1eERHdmFqc0IyMDBOQlhpQ29UT0JjYUNsMmUzRTdVMnRzTU0vOUs3S1FaYllQTWwKVHp4bjVVRFhncjZ0em12bWIwd2IvZFJwRCt2UVdnanVWZFREZWxqekk4d2lFcG1kcEVwQzJCRDVYRC9LL2MzaQpteE5sVVdsWWM2UHN3VTVudGx2WmZvcHhvTU9RbC9sUkhMS3hmUGMxU0hWM3JrTGluclZ1WDM5elhJYkpNMG82Cml3QXlYTDJSenFxb3NzTlB5QjhrNWgxUEVieXRXS2dTSkQ0bnhNdkFQaE5CQ0ZnTktDRXlZRlBXQkNscVlkZFIKalk0UUMvZUNxeDNJTW5abTI4UnBBdnpPWlVOdWZPbDNISTRoaGdpRVAvcWxHY2xIUzlORU9lMkJ0NDczRGtXVgpjR1BWU2IzZjU1Ny9OZU1HODZjaU1Ma0RJNGduQWdNQkFBR2pnYXd3Z2Frd0RnWURWUjBQQVFIL0JBUURBZ1dnCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZKdk0KazQ0QUkyQWFra1dtREliQ0ZYNXdEMzI1TUI4R0ExVWRJd1FZTUJhQUZENm5iQittcFZBb0JpcDlLRGtIcGswNgpHSDR1TURRR0ExVWRFUVF0TUN1Q0tTb3VZWEJ3Y3k1amJtWXlNQzVqYkc5MVpDNXNZV0l1Wlc1bkxtSnZjeTV5ClpXUm9ZWFF1WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmFQR0I0NHpUTkRDVUo0MlU1VWdKek9ZQ1oKWkt4Q0FvSnRZRnBnNUQxcHBkOFE5R2N4clVNaTczcTZ1UlVmTFJINHpjQm9sRUFTWWtnQS9ucmFidW8yaU56Ygo4Nkp5NUdOWDFpRzFPa2svTnRjM0t2ckptc005ejc0L0RhQ1N1M2RGTGRwRXoxeFJoQkxJMkpWcnZUZjdYNHZqCnB3SXY5Q0ljRHFsUXdKeXVQTlJ3L2ZlelZGalFEdnBMRStEcUVDTGVZeUdGT3JybklnWFdIUEtWamUwMVhGUkQKVWJ2RCt5ek45QXRBb3o5SWhEb0RRcDY0bUpydUp5L3lONGVsVGFZRGFqVzdjdDFlZmV0bnBldHFuZTBKd3owdAp5Q1U3Wll3N1hCOUtoQjBPbzJEeUdneThnNFZlcm1ML21YRmZ2Wlp3bHlNNXFOaVhMWmYzKzF5QkdTZSsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMk1ERTVNRGd3T1RJd0hoY05NakF4TURBMU1UUXlPREV4V2hjTk1qSXhNREExCk1UUXlPREV5V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTJNREU1TURnd09USXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3l6M1B2cU83dFk4ekxMZEdsMDZoUAo1aXhGTWJqcHdyMk9iZDJicmtGWFdOYnFjMEhjMlJZU1pRYnNrZDBjcGhGYk1DV2JVelF5dmdWZEI0ckFPNUIvClM3eUplQTcrQkpxSzRmQWpVMFM5TkVTVUlkV0taKzlrUW1TL2d0MHNmL2FSUVhPb2p5Z1hWcTBmVWhvWnRwR00KY293L0pmN1JjWjRaNVFVdm9tYWNDbWM0S2g4N2xiWGhlL0kxVHMxUUdoM1BsZGtUa3J0aXRKU1YyRlFSOUFqQgo3aTFsRmR6MDlQcFhrSW1nQ1BDLzhmNGR5bkVtQUFndmcvbXg1OGZWbS81bWdUTjQ4RUcxNU9LWC80Z2xWM0JOCi9JWWEvV3NQZnIydEkwclNMb2lpQW53RjFLa2VlTXptMmUxWndUU3JkcVdOZmdVRVFaR1hlVXhzclp0WUU5MC8KQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCUStwMndmcHFWUUtBWXFmU2c1QjZaTk9oaCtMakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClBzZlVReUxNa09OUDZOK01VbnpyTVkvNm5HajBsSnJZQ2x5Q3daY09WNG5zS0pNUHpMLzNMUnhJYjJjVXY2OG4KWTZ3c2Nad3UreXVGZkx0RjZ2akJaZHB6Um1uSUR0dFJPYjJWdHd4R1FIR0ozWkNlUFVsTU1hbHJrTXEveVBBdwpQbjN1bHBWTTBHTUM3Nm16Q0NIOXBHdWxEcjNyTmNPbnhQK0cwRTZnYWZ3bzBBQ0dQSDEvNTVSN1lHVkE2Tm1XCnZoc1JUa2JwYUo4bXAzR21HaU1DVWNGdHFJR3J5Y2pWdnY1cmhJaVRoQWw4eUhTMFhISUlEVXNNY2ZzQk0zVGQKckRhNE1icVVZUGs2Q0p4UHdDOUI2ZU90UWw5cjFEekdDSk9xOHdXbXcyRHF6c21BNHg4QytlclF0bTkzR0kvMgpCallTRUFmUEd0RThPYzRzVDc0S1ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFFEQ0NBaWlnQXdJQkFnSUlKM0dEZWVra1lVc3dEUVlKS29aSWh2Y05BUUVMQlFBd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUI0WERUSXdNVEF3TlRFek16TXdPVm9YRFRNd01UQXdNekV6TXpNd09Wb3dQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeklDN2wrcHpRVzhyCnNhNk5nUjlNaXk2ekV0R0pZNi8rVTc5bzBCWk0rdHB1eFdQa0tmcEYyYjNWWWUwNzRnc09XVDZlSTlUUzJXU1IKdnFOVExqQngvUnpZbmZ5bjlWVjNwRUlqcTBGbXJvMG5Fek8zcjNqYWI5NlNLbkprTW9qOWhFS2MrNklPYXdCZwpWSHJCUTNSN0x2SmtaWlcybVR3YUxTSlo5VWdqZ2dCUUE2VWxmNkVhVXFtK2ZycmVOVHFjZzluRmpUOHFPNi8xCkV4dW5OQjlzcHhtVUFQVE5tQUdtMHRlYTJTR1k1bm9YSitRNXNDc2dwYzBPd2ZLelN3bzdOSHBaSjJVN3VGMzMKZUpQT01Wbk9McFNsWUdRNGlzTjFDK0Z0WXZVQ2huMUVKdDRhQThCQ3pKVEY0Y1lNZ01GYW9aWWZjNUhKTy9EMQpvRUJmb1FlbW53SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QWRCZ05WSFE0RUZnUVVTd2tTUXRzY1NVL2k3bHNaVXliY0E1R2VubEl3RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFNc09ya0JlMEJubUZWbXFjaHpDSEVWZEVURUM1TnFsYyt1MFZaVk9PUEpCNGRKMGUxc1VwNHUzRmxGVQovT2ZLWGlad2c1d2Z2ckdMRzNRMG5OZ0lWR0VTTExMakxrWFpYYVhHZ3VTM2psaEIxOXA5QjdZRzJTekhZYUhMCnJaeS9tZU9WeGk2WVppNmJrWlRsL0JrU2toQ29oVUg0VVpqR1ROcWYxR0ppRmV4N1l6V0hXeHgzTXFNYVdWcEYKei90azNRbGdXMXgvT3A3WlQ4VlpnZ2FyTnZrelJnRWZNajA2K2RXeGpGYXRyTGhjajMxc2FxSXlnc0lEQjBuMgp0UWZuanNyQkNTcWkvNW81NFR3QmtpVjdwTFJMbE5zbnJKS0dRdktESHpEbUx3UjN3MzdJa3dIVzR3ZkwxcXlDCkVRcFJmblphY1FDa0JyZ0I2dG04ODcyenllOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlhSENLMXZ4UW00QXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJd01UQXdOVEV6TXpNd09Wb1hEVE13TVRBd016RXpNek13T1Zvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUF2S3lEZVAweWdqbTJGUE1EazE4UnU3VjBESHBBS0ZFS3FEK05hQXBUbFpWVXhRR25WR3dZUmNGVysvRmYKRXRiNFlzcXBIdUNiVnBLOG4zT29DbkVKS2xHZm8wOHliWkhoT2RIOEpteTFnV2NtNmd4QXpzTGFEaXdsNGtWagpTMmFVSmpSV3R5QkFuZE14SlRrMWo0c1oxSTJUSXpCU0pEOFQ3bmdMU3AvNUVpT3d4SzJoR2tUVS80WGJ6d2t1Ckp3TnlvdXFKUkZBQU5pa2p0N0lEZnJGb0wzVVltZmxKNExkUllkeXUyaDgvMmJxdkd2cWl2VjRBbWhremk2M1oKRXl0UkZQS0dvOHBCMEJ0dnQ1UWJ4T3BYRnE3QW5uYm5CNitCOFJ0eW94TzRPTjJhYTlET3YzR29HeHVxZDV2bAp0aldxU0RzYnM3b2tjQlB6Vk9UMGJDaTRGUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMUE5bXdDQ1BaRW5uRFFWYXhkRTlPNmNXU2I0d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSEtZMHVnVHp3YmlkUmFJUHV3R3hJRGxZclhoMkpUNnc3dzlGSkpjcnJEeApmSm94NDhkcmdWbWphSVMyZms1QVVSOWlyWFlERmF4L3BZdUR3aHh5ajVIa0xJbGNseC9Yc1dHeGZnRHhOODcrCk1yYUlQU1R6QlRyd2Z5SEQ5enAxNEVhbVd4ZXRJUUxzY1loOUc5Z2lQVm15QVJrU3V0T01jYitReklXTUt2VXYKUkxWWDcxN1lsZzBpVHA5d29BTmtkL2tZYmtFK2F4VHhmMUVJcXN3T0JzL3lBQ1c5L2VvczVjRGR4bW5Tc0RjSApncTFzZmQxNjd2UzlKQklvWWwvRmcwdVdDZmdocVhXcytIeGpnbVlxVG02VU96QXcrcnhNOW5oTFJ2bElWSnYrCk5vcmZXbFdEQVRESXlVcSs1V2FrbWNlZUFVS0Zub1QzUUZXZkp1N1BPdzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZjlYSFkxMWRLS2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBeE1EQTFNVE16TXpFd1doY05NekF4TURBek1UTXpNekV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDFTVmhxTWVyZXYzZnlTUzloVHFvejBmWEZGYkZHTgpsVm9wcjc4cFVDS3RtY0dSdE0wZDlZL25QRllTb1Q1cWhDVnJuVU02TGMraVVOZTlBQXZMbjB5NFVMYnFIdFVpCkc0ODVYblFTQk9KRTZDN3NjVDBGVlRha0t0SnVUbFlUK0RzZHYwVjk0NjNkL1krZU5Uei9Oemg5TXMxNSt4d1YKYXFFL3lzdFQ0TUt0bUhqZ09JYklFV2RSTlp6ZFYxQkQwSlhSeFgvYi8zWnFpRzJUR1h2Yk1LNUptMVFKZkZRUApaUmgxM0IxdW5CRHV1YnpwL3N2OHlWL3Q4R2lUYVAwbkNweElUUDY1NEJ4Z2d0M2tqMmczVGUrTm4yS0lzRW1PClpzN0Foc3RRNDdxZGlhS1NJb3owZ0plNVpyU1c2R2F3ZlVzWUV1bUEvNkpsM0FYdm51SUkyMEVDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkRCeApZemRtcXVhT3Z0ekUxR1IvNE5CRzlLWFNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFySWhaOTFpV2p3NU90ClVac2cvU0FXc1MwSXRQUHltVVpGTWlyWjRLOFp0T1REdVp2R2V0cGt0Q2ZXMWFFemVkbzRiejF1eTZWT25IMnkKM1B5M0J4QTVINDNlUmdZVEFrZXdoUzIwNHNGL3AzVDdxS0NIYVd2Y3A5NHozb2FRZFo3M1YrTHdwM2R0ODlQUQozbDdyUUYwSEZUY2o1S0tLekg1dGRHYUxLV3BWeXFEOUpaWmFDdkdseW5sR1BZQ0xQTE82c2hmaVBjTml6empnCm1YdHliWDc2Z2ErVldPTmQvZmQ4U2ZiZlVNT1NXYmd6TUFod1RhWmdnYUFieG1oSHRPUGhwTFhFNjBDVDhMb1UKVVEvQkNkcnEvNExtSkpsVkJydUVwRlpJdHFnQ0NtbWRGYnhhVlU4OWFXQ21ta1lQOVlkcjNuR3BkNlQ3MVI2YQp4RUxVSCs5SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://api.cnf20.cloud.lab.eng.bos.redhat.com:6443
  name: api-cnf20-cloud-lab-eng-bos-redhat-com:6443
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpVENDQW5HZ0F3SUJBZ0lJTzM0SWkrZ0tiMTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qQXhPVEE0TURreU1CNFhEVEl3TVRBd05URTBORFEwTkZvWApEVEl5TVRBd05URTBORFEwTlZvd05ERXlNREFHQTFVRUF3d3BLaTVoY0hCekxtTnVaakl3TG1Oc2IzVmtMbXhoCllpNWxibWN1WW05ekxuSmxaR2hoZEM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREJVL3lJbHVVazV4REd2YWpzQjIwME5CWGlDb1RPQmNhQ2wyZTNFN1UydHNNTS85SzdLUVpiWVBNbApUenhuNVVEWGdyNnR6bXZtYjB3Yi9kUnBEK3ZRV2dqdVZkVERlbGp6STh3aUVwbWRwRXBDMkJENVhEL0svYzNpCm14TmxVV2xZYzZQc3dVNW50bHZaZm9weG9NT1FsL2xSSExLeGZQYzFTSFYzcmtMaW5yVnVYMzl6WEliSk0wbzYKaXdBeVhMMlJ6cXFvc3NOUHlCOGs1aDFQRWJ5dFdLZ1NKRDRueE12QVBoTkJDRmdOS0NFeVlGUFdCQ2xxWWRkUgpqWTRRQy9lQ3F4M0lNblptMjhScEF2ek9aVU51Zk9sM0hJNGhoZ2lFUC9xbEdjbEhTOU5FT2UyQnQ0NzNEa1dWCmNHUFZTYjNmNTU3L05lTUc4NmNpTUxrREk0Z25BZ01CQUFHamdhd3dnYWt3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkp2TQprNDRBSTJBYWtrV21ESWJDRlg1d0QzMjVNQjhHQTFVZEl3UVlNQmFBRkQ2bmJCK21wVkFvQmlwOUtEa0hwazA2CkdINHVNRFFHQTFVZEVRUXRNQ3VDS1NvdVlYQndjeTVqYm1ZeU1DNWpiRzkxWkM1c1lXSXVaVzVuTG1KdmN5NXkKWldSb1lYUXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVBHQjQ0elRORENVSjQyVTVVZ0p6T1lDWgpaS3hDQW9KdFlGcGc1RDFwcGQ4UTlHY3hyVU1pNzNxNnVSVWZMUkg0emNCb2xFQVNZa2dBL25yYWJ1bzJpTnpiCjg2Snk1R05YMWlHMU9ray9OdGMzS3ZySm1zTTl6NzQvRGFDU3UzZEZMZHBFejF4UmhCTEkySlZydlRmN1g0dmoKcHdJdjlDSWNEcWxRd0p5dVBOUncvZmV6VkZqUUR2cExFK0RxRUNMZVl5R0ZPcnJuSWdYV0hQS1ZqZTAxWEZSRApVYnZEK3l6TjlBdEFvejlJaERvRFFwNjRtSnJ1SnkveU40ZWxUYVlEYWpXN2N0MWVmZXRucGV0cW5lMEp3ejB0CnlDVTdaWXc3WEI5S2hCME9vMkR5R2d5OGc0VmVybUwvbVhGZnZaWndseU01cU5pWExaZjMrMXlCR1NlKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERERDQ0FmU2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUyTURFNU1EZ3dPVEl3SGhjTk1qQXhNREExTVRReU9ERXhXaGNOTWpJeE1EQTEKTVRReU9ERXlXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMk1ERTVNRGd3T1RJdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeXozUHZxTzd0WTh6TExkR2wwNmhQCjVpeEZNYmpwd3IyT2JkMmJya0ZYV05icWMwSGMyUllTWlFic2tkMGNwaEZiTUNXYlV6UXl2Z1ZkQjRyQU81Qi8KUzd5SmVBNytCSnFLNGZBalUwUzlORVNVSWRXS1orOWtRbVMvZ3Qwc2YvYVJRWE9vanlnWFZxMGZVaG9adHBHTQpjb3cvSmY3UmNaNFo1UVV2b21hY0NtYzRLaDg3bGJYaGUvSTFUczFRR2gzUGxka1RrcnRpdEpTVjJGUVI5QWpCCjdpMWxGZHowOVBwWGtJbWdDUEMvOGY0ZHluRW1BQWd2Zy9teDU4ZlZtLzVtZ1RONDhFRzE1T0tYLzRnbFYzQk4KL0lZYS9Xc1BmcjJ0STByU0xvaWlBbndGMUtrZWVNem0yZTFad1RTcmRxV05mZ1VFUVpHWGVVeHNyWnRZRTkwLwpBZ01CQUFHalJUQkRNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHCkExVWREZ1FXQkJRK3Ayd2ZwcVZRS0FZcWZTZzVCNlpOT2hoK0xqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKUHNmVVF5TE1rT05QNk4rTVVuenJNWS82bkdqMGxKcllDbHlDd1pjT1Y0bnNLSk1QekwvM0xSeEliMmNVdjY4bgpZNndzY1p3dSt5dUZmTHRGNnZqQlpkcHpSbW5JRHR0Uk9iMlZ0d3hHUUhHSjNaQ2VQVWxNTWFscmtNcS95UEF3ClBuM3VscFZNMEdNQzc2bXpDQ0g5cEd1bERyM3JOY09ueFArRzBFNmdhZndvMEFDR1BIMS81NVI3WUdWQTZObVcKdmhzUlRrYnBhSjhtcDNHbUdpTUNVY0Z0cUlHcnljalZ2djVyaElpVGhBbDh5SFMwWEhJSURVc01jZnNCTTNUZApyRGE0TWJxVVlQazZDSnhQd0M5QjZlT3RRbDlyMUR6R0NKT3E4d1dtdzJEcXpzbUE0eDhDK2VyUXRtOTNHSS8yCkJqWVNFQWZQR3RFOE9jNHNUNzRLVlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEaVRDQ0FuR2dBd0lCQWdJSU8zNElpK2dLYjEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFa01DSUdBMVVFCkF3d2JhVzVuY21WemN5MXZjR1Z5WVhSdmNrQXhOakF4T1RBNE1Ea3lNQjRYRFRJd01UQXdOVEUwTkRRME5Gb1gKRFRJeU1UQXdOVEUwTkRRME5Wb3dOREV5TURBR0ExVUVBd3dwS2k1aGNIQnpMbU51WmpJd0xtTnNiM1ZrTG14aApZaTVsYm1jdVltOXpMbkpsWkdoaGRDNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURCVS95SWx1VWs1eERHdmFqc0IyMDBOQlhpQ29UT0JjYUNsMmUzRTdVMnRzTU0vOUs3S1FaYllQTWwKVHp4bjVVRFhncjZ0em12bWIwd2IvZFJwRCt2UVdnanVWZFREZWxqekk4d2lFcG1kcEVwQzJCRDVYRC9LL2MzaQpteE5sVVdsWWM2UHN3VTVudGx2WmZvcHhvTU9RbC9sUkhMS3hmUGMxU0hWM3JrTGluclZ1WDM5elhJYkpNMG82Cml3QXlYTDJSenFxb3NzTlB5QjhrNWgxUEVieXRXS2dTSkQ0bnhNdkFQaE5CQ0ZnTktDRXlZRlBXQkNscVlkZFIKalk0UUMvZUNxeDNJTW5abTI4UnBBdnpPWlVOdWZPbDNISTRoaGdpRVAvcWxHY2xIUzlORU9lMkJ0NDczRGtXVgpjR1BWU2IzZjU1Ny9OZU1HODZjaU1Ma0RJNGduQWdNQkFBR2pnYXd3Z2Frd0RnWURWUjBQQVFIL0JBUURBZ1dnCk1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZKdk0KazQ0QUkyQWFra1dtREliQ0ZYNXdEMzI1TUI4R0ExVWRJd1FZTUJhQUZENm5iQittcFZBb0JpcDlLRGtIcGswNgpHSDR1TURRR0ExVWRFUVF0TUN1Q0tTb3VZWEJ3Y3k1amJtWXlNQzVqYkc5MVpDNXNZV0l1Wlc1bkxtSnZjeTV5ClpXUm9ZWFF1WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmFQR0I0NHpUTkRDVUo0MlU1VWdKek9ZQ1oKWkt4Q0FvSnRZRnBnNUQxcHBkOFE5R2N4clVNaTczcTZ1UlVmTFJINHpjQm9sRUFTWWtnQS9ucmFidW8yaU56Ygo4Nkp5NUdOWDFpRzFPa2svTnRjM0t2ckptc005ejc0L0RhQ1N1M2RGTGRwRXoxeFJoQkxJMkpWcnZUZjdYNHZqCnB3SXY5Q0ljRHFsUXdKeXVQTlJ3L2ZlelZGalFEdnBMRStEcUVDTGVZeUdGT3JybklnWFdIUEtWamUwMVhGUkQKVWJ2RCt5ek45QXRBb3o5SWhEb0RRcDY0bUpydUp5L3lONGVsVGFZRGFqVzdjdDFlZmV0bnBldHFuZTBKd3owdAp5Q1U3Wll3N1hCOUtoQjBPbzJEeUdneThnNFZlcm1ML21YRmZ2Wlp3bHlNNXFOaVhMWmYzKzF5QkdTZSsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMk1ERTVNRGd3T1RJd0hoY05NakF4TURBMU1UUXlPREV4V2hjTk1qSXhNREExCk1UUXlPREV5V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTJNREU1TURnd09USXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3l6M1B2cU83dFk4ekxMZEdsMDZoUAo1aXhGTWJqcHdyMk9iZDJicmtGWFdOYnFjMEhjMlJZU1pRYnNrZDBjcGhGYk1DV2JVelF5dmdWZEI0ckFPNUIvClM3eUplQTcrQkpxSzRmQWpVMFM5TkVTVUlkV0taKzlrUW1TL2d0MHNmL2FSUVhPb2p5Z1hWcTBmVWhvWnRwR00KY293L0pmN1JjWjRaNVFVdm9tYWNDbWM0S2g4N2xiWGhlL0kxVHMxUUdoM1BsZGtUa3J0aXRKU1YyRlFSOUFqQgo3aTFsRmR6MDlQcFhrSW1nQ1BDLzhmNGR5bkVtQUFndmcvbXg1OGZWbS81bWdUTjQ4RUcxNU9LWC80Z2xWM0JOCi9JWWEvV3NQZnIydEkwclNMb2lpQW53RjFLa2VlTXptMmUxWndUU3JkcVdOZmdVRVFaR1hlVXhzclp0WUU5MC8KQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCUStwMndmcHFWUUtBWXFmU2c1QjZaTk9oaCtMakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClBzZlVReUxNa09OUDZOK01VbnpyTVkvNm5HajBsSnJZQ2x5Q3daY09WNG5zS0pNUHpMLzNMUnhJYjJjVXY2OG4KWTZ3c2Nad3UreXVGZkx0RjZ2akJaZHB6Um1uSUR0dFJPYjJWdHd4R1FIR0ozWkNlUFVsTU1hbHJrTXEveVBBdwpQbjN1bHBWTTBHTUM3Nm16Q0NIOXBHdWxEcjNyTmNPbnhQK0cwRTZnYWZ3bzBBQ0dQSDEvNTVSN1lHVkE2Tm1XCnZoc1JUa2JwYUo4bXAzR21HaU1DVWNGdHFJR3J5Y2pWdnY1cmhJaVRoQWw4eUhTMFhISUlEVXNNY2ZzQk0zVGQKckRhNE1icVVZUGs2Q0p4UHdDOUI2ZU90UWw5cjFEekdDSk9xOHdXbXcyRHF6c21BNHg4QytlclF0bTkzR0kvMgpCallTRUFmUEd0RThPYzRzVDc0S1ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFFEQ0NBaWlnQXdJQkFnSUlKM0dEZWVra1lVc3dEUVlKS29aSWh2Y05BUUVMQlFBd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUI0WERUSXdNVEF3TlRFek16TXdPVm9YRFRNd01UQXdNekV6TXpNd09Wb3dQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeklDN2wrcHpRVzhyCnNhNk5nUjlNaXk2ekV0R0pZNi8rVTc5bzBCWk0rdHB1eFdQa0tmcEYyYjNWWWUwNzRnc09XVDZlSTlUUzJXU1IKdnFOVExqQngvUnpZbmZ5bjlWVjNwRUlqcTBGbXJvMG5Fek8zcjNqYWI5NlNLbkprTW9qOWhFS2MrNklPYXdCZwpWSHJCUTNSN0x2SmtaWlcybVR3YUxTSlo5VWdqZ2dCUUE2VWxmNkVhVXFtK2ZycmVOVHFjZzluRmpUOHFPNi8xCkV4dW5OQjlzcHhtVUFQVE5tQUdtMHRlYTJTR1k1bm9YSitRNXNDc2dwYzBPd2ZLelN3bzdOSHBaSjJVN3VGMzMKZUpQT01Wbk9McFNsWUdRNGlzTjFDK0Z0WXZVQ2huMUVKdDRhQThCQ3pKVEY0Y1lNZ01GYW9aWWZjNUhKTy9EMQpvRUJmb1FlbW53SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QWRCZ05WSFE0RUZnUVVTd2tTUXRzY1NVL2k3bHNaVXliY0E1R2VubEl3RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFNc09ya0JlMEJubUZWbXFjaHpDSEVWZEVURUM1TnFsYyt1MFZaVk9PUEpCNGRKMGUxc1VwNHUzRmxGVQovT2ZLWGlad2c1d2Z2ckdMRzNRMG5OZ0lWR0VTTExMakxrWFpYYVhHZ3VTM2psaEIxOXA5QjdZRzJTekhZYUhMCnJaeS9tZU9WeGk2WVppNmJrWlRsL0JrU2toQ29oVUg0VVpqR1ROcWYxR0ppRmV4N1l6V0hXeHgzTXFNYVdWcEYKei90azNRbGdXMXgvT3A3WlQ4VlpnZ2FyTnZrelJnRWZNajA2K2RXeGpGYXRyTGhjajMxc2FxSXlnc0lEQjBuMgp0UWZuanNyQkNTcWkvNW81NFR3QmtpVjdwTFJMbE5zbnJKS0dRdktESHpEbUx3UjN3MzdJa3dIVzR3ZkwxcXlDCkVRcFJmblphY1FDa0JyZ0I2dG04ODcyenllOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlhSENLMXZ4UW00QXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJd01UQXdOVEV6TXpNd09Wb1hEVE13TVRBd016RXpNek13T1Zvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUF2S3lEZVAweWdqbTJGUE1EazE4UnU3VjBESHBBS0ZFS3FEK05hQXBUbFpWVXhRR25WR3dZUmNGVysvRmYKRXRiNFlzcXBIdUNiVnBLOG4zT29DbkVKS2xHZm8wOHliWkhoT2RIOEpteTFnV2NtNmd4QXpzTGFEaXdsNGtWagpTMmFVSmpSV3R5QkFuZE14SlRrMWo0c1oxSTJUSXpCU0pEOFQ3bmdMU3AvNUVpT3d4SzJoR2tUVS80WGJ6d2t1Ckp3TnlvdXFKUkZBQU5pa2p0N0lEZnJGb0wzVVltZmxKNExkUllkeXUyaDgvMmJxdkd2cWl2VjRBbWhremk2M1oKRXl0UkZQS0dvOHBCMEJ0dnQ1UWJ4T3BYRnE3QW5uYm5CNitCOFJ0eW94TzRPTjJhYTlET3YzR29HeHVxZDV2bAp0aldxU0RzYnM3b2tjQlB6Vk9UMGJDaTRGUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMUE5bXdDQ1BaRW5uRFFWYXhkRTlPNmNXU2I0d0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSEtZMHVnVHp3YmlkUmFJUHV3R3hJRGxZclhoMkpUNnc3dzlGSkpjcnJEeApmSm94NDhkcmdWbWphSVMyZms1QVVSOWlyWFlERmF4L3BZdUR3aHh5ajVIa0xJbGNseC9Yc1dHeGZnRHhOODcrCk1yYUlQU1R6QlRyd2Z5SEQ5enAxNEVhbVd4ZXRJUUxzY1loOUc5Z2lQVm15QVJrU3V0T01jYitReklXTUt2VXYKUkxWWDcxN1lsZzBpVHA5d29BTmtkL2tZYmtFK2F4VHhmMUVJcXN3T0JzL3lBQ1c5L2VvczVjRGR4bW5Tc0RjSApncTFzZmQxNjd2UzlKQklvWWwvRmcwdVdDZmdocVhXcytIeGpnbVlxVG02VU96QXcrcnhNOW5oTFJ2bElWSnYrCk5vcmZXbFdEQVRESXlVcSs1V2FrbWNlZUFVS0Zub1QzUUZXZkp1N1BPdzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZjlYSFkxMWRLS2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBeE1EQTFNVE16TXpFd1doY05NekF4TURBek1UTXpNekV3V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDFTVmhxTWVyZXYzZnlTUzloVHFvejBmWEZGYkZHTgpsVm9wcjc4cFVDS3RtY0dSdE0wZDlZL25QRllTb1Q1cWhDVnJuVU02TGMraVVOZTlBQXZMbjB5NFVMYnFIdFVpCkc0ODVYblFTQk9KRTZDN3NjVDBGVlRha0t0SnVUbFlUK0RzZHYwVjk0NjNkL1krZU5Uei9Oemg5TXMxNSt4d1YKYXFFL3lzdFQ0TUt0bUhqZ09JYklFV2RSTlp6ZFYxQkQwSlhSeFgvYi8zWnFpRzJUR1h2Yk1LNUptMVFKZkZRUApaUmgxM0IxdW5CRHV1YnpwL3N2OHlWL3Q4R2lUYVAwbkNweElUUDY1NEJ4Z2d0M2tqMmczVGUrTm4yS0lzRW1PClpzN0Foc3RRNDdxZGlhS1NJb3owZ0plNVpyU1c2R2F3ZlVzWUV1bUEvNkpsM0FYdm51SUkyMEVDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkRCeApZemRtcXVhT3Z0ekUxR1IvNE5CRzlLWFNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFySWhaOTFpV2p3NU90ClVac2cvU0FXc1MwSXRQUHltVVpGTWlyWjRLOFp0T1REdVp2R2V0cGt0Q2ZXMWFFemVkbzRiejF1eTZWT25IMnkKM1B5M0J4QTVINDNlUmdZVEFrZXdoUzIwNHNGL3AzVDdxS0NIYVd2Y3A5NHozb2FRZFo3M1YrTHdwM2R0ODlQUQozbDdyUUYwSEZUY2o1S0tLekg1dGRHYUxLV3BWeXFEOUpaWmFDdkdseW5sR1BZQ0xQTE82c2hmaVBjTml6empnCm1YdHliWDc2Z2ErVldPTmQvZmQ4U2ZiZlVNT1NXYmd6TUFod1RhWmdnYUFieG1oSHRPUGhwTFhFNjBDVDhMb1UKVVEvQkNkcnEvNExtSkpsVkJydUVwRlpJdHFnQ0NtbWRGYnhhVlU4OWFXQ21ta1lQOVlkcjNuR3BkNlQ3MVI2YQp4RUxVSCs5SgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://api.cnf20.cloud.lab.eng.bos.redhat.com:6443
  name: cnf20
contexts:
- context:
    cluster: cnf20
    user: admin
  name: admin
- context:
    cluster: api-cnf20-cloud-lab-eng-bos-redhat-com:6443
    namespace: openshift-ingress-operator
    user: system:admin
  name: openshift-ingress-operator/api-cnf20-cloud-lab-eng-bos-redhat-com:6443/system:admin
- context:
    cluster: api-cnf20-cloud-lab-eng-bos-redhat-com:6443
    namespace: openshift-ingress
    user: system:admin
  name: openshift-ingress/api-cnf20-cloud-lab-eng-bos-redhat-com:6443/system:admin
- context:
    cluster: api-cnf20-cloud-lab-eng-bos-redhat-com:6443
    namespace: openshift-machine-api
    user: system:admin
  name: openshift-machine-api/api-cnf20-cloud-lab-eng-bos-redhat-com:6443/system:admin
current-context: openshift-ingress/api-cnf20-cloud-lab-eng-bos-redhat-com:6443/system:admin
kind: Config
preferences: {}
users:
- name: admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJV2FXNEpHMjVMSkV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TURFd01EVXhNek16TURsYUZ3MHpNREV3TURNeE16TXpNRGxhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvU2pCV3Y0TWF3eGtRdkVjaXVkOXg3MXNCZEthU0R3MVZISVZqTmZaawpwR2JQNEV6N1NjSUNIcTlrR1VzNWNpSFQ5aWl3alY5WGFTMGZ3SUgrQllBc3VaeENtUFdVaW92TzJRRnFNNjJZCnd5VHU5QXgzOXNJUDlOalc0ZW1XQTdXL3VjUldEMm1hb1djMWRJMmlzeDdCemJJLytqNSs2MnBSTkMyMjZhMjYKL29rVStOMzljb25nQVQ4NzlyWHVxWHZQanhBdkE3Q1NkblpTL3R5RGJxS2kxQ2loYTBWWXFUNzlIdS9qM1pocwpmVU1SZGJMMVA4VG9UTC9PV1JxVXhsYmdVYVUrWlNmVTdWcko2TEZqR1g4VUl0Z3JUb2h4THBlR1JzOUhGVE1zCkFaajF5SUd4RWVCUHVKSkZ0V2JLdzFjL2pBNURzbHNQTEhnREtjVGwwRnVaQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVEVFNpdFpsem9DK0dQNU0yOTZSdHZpZDIzeWd3SHdZRFZSMGpCQmd3CkZvQVU1U0N0Zm8xNzZPTDJHMHNWcHBxcUxJelVMa1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFpRVFpVkEKNHJ0WHZvYlZwSnkzblNneFpRaHY1VkN2R1ZDaFZ1NDUyNUlOK2RpSGNSTmJJZjdRdlZNTUtPYUNXOUVmaW11LwphOFB0WHYwR1h3bnJqdG1XellXcWdRVTEyZDFJUGh6SXlGSjdMQUpJU1hJNXBhZ1JvUE84UHB6RUwxTktNb1FyCm01czVHelc4SHNGdlVPSFVEZTNIazBmWlZENzgrOUtHbm0zN2h2TVZLSlhWRUVBOTQ5cGJxZ2hROTJsM09oSXQKSURza2JLdElSS2Y1VHk3TFNuRGNCeUR2c1kxUVdXUnhwVGFSTDhodU1BbDcwNkQ1Qm5PbERPalJYdjhwWm1ZVgpjUG9rMC9mU1BqWmlrY1lkbnF2QmFxRG9oQllKYXhNemgybGNhSk9nK1FGUFhmZUZtTlRCc2dLcUdDVWJ5MDZmCmIvMlhybi9wNXVpMW9pMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBdjBvd1ZyK0RHc01aRUx4SElybmZjZTliQVhTbWtnOE5WUnlGWXpYMlpLUm16K0JNCiswbkNBaDZ2WkJsTE9YSWgwL1lvc0kxZlYya3RIOENCL2dXQUxMbWNRcGoxbElxTHp0a0Jhak90bU1Nazd2UU0KZC9iQ0QvVFkxdUhwbGdPMXY3bkVWZzlwbXFGbk5YU05vck1ld2MyeVAvbytmdXRxVVRRdHR1bXR1djZKRlBqZAovWEtKNEFFL08vYTE3cWw3ejQ4UUx3T3drbloyVXY3Y2cyNmlvdFFvb1d0RldLaysvUjd2NDkyWWJIMURFWFd5CjlUL0U2RXkvemxrYWxNWlc0RkdsUG1VbjFPMWF5ZWl4WXhsL0ZDTFlLMDZJY1M2WGhrYlBSeFV6TEFHWTljaUIKc1JIZ1Q3aVNSYlZteXNOWFA0d09RN0piRHl4NEF5bkU1ZEJibVFJREFRQUJBb0gvTHhNUzBrWk8vVWNGNUJoeAphUnBVNHJVRXNGY0VwdTBOV3VTcDdzQlk0bXVTNFpWUlhJWEtPTHRVYmszTE5WZmcrMGlZdXRvUG5ITkZwNHE0CmNzcm53Qm50V25aSitVUWZJOGhEa044bTJYRXNwYUZwY0J4SnBhT2J1VVhmTmd1enJuc0kxaVQwMkJqZ1RVZGgKazZpQTZUQzFyUWpvV0ZPVzFtVUEyd0ttdmwxM2lQcXZqUnN2Yk5vQjBwQWwxWUtlMTNkeDE2OS9vRHlQbEN5Zgo4cEwzNDBCUVFSVElxTVpOWlVYSnZnNmptNVQ2NjdNS1BBbWpJdkdZbTNWQnJ4dEJqZG1nM21mTDhJQmQwa283Ci9kaXYzb0gralJoUXhXYW9WZUlpMjB5eGRsNXVJSGJoNVpaZzlyd0dacUF0UGlCRVMweENrUlJ1c1FCTTVnTjgKdDJtQkFvR0JBUHZ4TmkwdkljWkEzTTlieStaV2t1U1Nkcld2L0ZtWVlCWENjYTZDMUFtdk81aFkrdHhpb1czRgo3Umg3YVFvK3lQbGNLQU5ZVW9OL3BYNTRwU0tDSGlTdDlCNUxPMEVLeVlhWmpJVjNhbjR5Y3N6ZnA2dllnRDF6Cm0wQWhvaUZjM0pEMENMRWV6emVuRHNWTyt5a2I4VitXdjRLWEdpVEdJNTd0SHB0cnVHdkpBb0dCQU1KZTVsMWgKY2xmUHdTZ09uTFdaZWxUSzlxNlMwU0RpeUdseEhxTlpNVW5lWXV1d2ZISWtoZkVJS1BmYTNLZnJ5a2VxYWtwTApWMjFtU3VHaXNIVjJ4T0pPWU5sY3JVcjVzTTdRTzIvYkdmWFl4T3FNVGdHMlJ3WFBkTkUzL3c2Mmd1MmNseVJ2CjErTmZEMjcwRlZxcGhzRWdhTVVjL2MyUWFtZTNUcXliQXJsUkFvR0FFamJVRmR3c2N1ckppK3cxQjRnR3dxT2MKRlhLTnFlU01QY1o2OVlUYjAzOXByWS94UXZHV2Zoc3JFdlFKR2dhRC9STWVpVzlmTjhhSXJtWUdla0l4NzdEcgp6eXpkTWN5WDJUVk1wWEdHcjJ6eVE4Ri9tN3JoT3BBYkR6M2ZQTTQ3Mi9ib2tmV0tRWm5BUlo5NkpQU3lOSmp2CmEzK0ZFbGVJeDdxWTFkK3B5NUVDZ1lCT2VueXV4WEtpYTlyRWJxbnRWTXVrd3RJNUNFUng3NzhWZTd2d0hrb2QKVmpKQWtXQ2R3WXRuRjNGYktiNGYrcjhRa29rWitET1RrMUsycWJadnB3VzFqZ25pbVYzS3dPZ1hpTklHeHNORApsVU5rcEVPMnd6OEg1SXg1RVEvbGcrRjNTTnRwdGRMSUZoQ29MdHNVWVJCc2w4WlZsL0FOK0xwTnFDQ1c1bnVDCkVRS0JnUURHd3k1L2lFVzM0bHY0UjdyRnJVL3R3ZUMyRDhMTEthUENuOWsrYXNkd3Z3ZDNJY0xyOTBTOHNBeE0KbU9TdWdOOWxCTWRkWmNLQnorRWJkTFV4Z1lFUVpWY2JmbldyaGxkMS90TkNZV0RPK1VQQWVFekQ5cFlQTXlDbgpLd3cralhOeHdzVm16akNXRUUrY0VvOUlTOXIxNlEzMXR1SE9CMG5nOHBqdTBFUlJCZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: system:admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJV2FXNEpHMjVMSkV3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TURFd01EVXhNek16TURsYUZ3MHpNREV3TURNeE16TXpNRGxhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvU2pCV3Y0TWF3eGtRdkVjaXVkOXg3MXNCZEthU0R3MVZISVZqTmZaawpwR2JQNEV6N1NjSUNIcTlrR1VzNWNpSFQ5aWl3alY5WGFTMGZ3SUgrQllBc3VaeENtUFdVaW92TzJRRnFNNjJZCnd5VHU5QXgzOXNJUDlOalc0ZW1XQTdXL3VjUldEMm1hb1djMWRJMmlzeDdCemJJLytqNSs2MnBSTkMyMjZhMjYKL29rVStOMzljb25nQVQ4NzlyWHVxWHZQanhBdkE3Q1NkblpTL3R5RGJxS2kxQ2loYTBWWXFUNzlIdS9qM1pocwpmVU1SZGJMMVA4VG9UTC9PV1JxVXhsYmdVYVUrWlNmVTdWcko2TEZqR1g4VUl0Z3JUb2h4THBlR1JzOUhGVE1zCkFaajF5SUd4RWVCUHVKSkZ0V2JLdzFjL2pBNURzbHNQTEhnREtjVGwwRnVaQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVEVFNpdFpsem9DK0dQNU0yOTZSdHZpZDIzeWd3SHdZRFZSMGpCQmd3CkZvQVU1U0N0Zm8xNzZPTDJHMHNWcHBxcUxJelVMa1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFpRVFpVkEKNHJ0WHZvYlZwSnkzblNneFpRaHY1VkN2R1ZDaFZ1NDUyNUlOK2RpSGNSTmJJZjdRdlZNTUtPYUNXOUVmaW11LwphOFB0WHYwR1h3bnJqdG1XellXcWdRVTEyZDFJUGh6SXlGSjdMQUpJU1hJNXBhZ1JvUE84UHB6RUwxTktNb1FyCm01czVHelc4SHNGdlVPSFVEZTNIazBmWlZENzgrOUtHbm0zN2h2TVZLSlhWRUVBOTQ5cGJxZ2hROTJsM09oSXQKSURza2JLdElSS2Y1VHk3TFNuRGNCeUR2c1kxUVdXUnhwVGFSTDhodU1BbDcwNkQ1Qm5PbERPalJYdjhwWm1ZVgpjUG9rMC9mU1BqWmlrY1lkbnF2QmFxRG9oQllKYXhNemgybGNhSk9nK1FGUFhmZUZtTlRCc2dLcUdDVWJ5MDZmCmIvMlhybi9wNXVpMW9pMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBdjBvd1ZyK0RHc01aRUx4SElybmZjZTliQVhTbWtnOE5WUnlGWXpYMlpLUm16K0JNCiswbkNBaDZ2WkJsTE9YSWgwL1lvc0kxZlYya3RIOENCL2dXQUxMbWNRcGoxbElxTHp0a0Jhak90bU1Nazd2UU0KZC9iQ0QvVFkxdUhwbGdPMXY3bkVWZzlwbXFGbk5YU05vck1ld2MyeVAvbytmdXRxVVRRdHR1bXR1djZKRlBqZAovWEtKNEFFL08vYTE3cWw3ejQ4UUx3T3drbloyVXY3Y2cyNmlvdFFvb1d0RldLaysvUjd2NDkyWWJIMURFWFd5CjlUL0U2RXkvemxrYWxNWlc0RkdsUG1VbjFPMWF5ZWl4WXhsL0ZDTFlLMDZJY1M2WGhrYlBSeFV6TEFHWTljaUIKc1JIZ1Q3aVNSYlZteXNOWFA0d09RN0piRHl4NEF5bkU1ZEJibVFJREFRQUJBb0gvTHhNUzBrWk8vVWNGNUJoeAphUnBVNHJVRXNGY0VwdTBOV3VTcDdzQlk0bXVTNFpWUlhJWEtPTHRVYmszTE5WZmcrMGlZdXRvUG5ITkZwNHE0CmNzcm53Qm50V25aSitVUWZJOGhEa044bTJYRXNwYUZwY0J4SnBhT2J1VVhmTmd1enJuc0kxaVQwMkJqZ1RVZGgKazZpQTZUQzFyUWpvV0ZPVzFtVUEyd0ttdmwxM2lQcXZqUnN2Yk5vQjBwQWwxWUtlMTNkeDE2OS9vRHlQbEN5Zgo4cEwzNDBCUVFSVElxTVpOWlVYSnZnNmptNVQ2NjdNS1BBbWpJdkdZbTNWQnJ4dEJqZG1nM21mTDhJQmQwa283Ci9kaXYzb0gralJoUXhXYW9WZUlpMjB5eGRsNXVJSGJoNVpaZzlyd0dacUF0UGlCRVMweENrUlJ1c1FCTTVnTjgKdDJtQkFvR0JBUHZ4TmkwdkljWkEzTTlieStaV2t1U1Nkcld2L0ZtWVlCWENjYTZDMUFtdk81aFkrdHhpb1czRgo3Umg3YVFvK3lQbGNLQU5ZVW9OL3BYNTRwU0tDSGlTdDlCNUxPMEVLeVlhWmpJVjNhbjR5Y3N6ZnA2dllnRDF6Cm0wQWhvaUZjM0pEMENMRWV6emVuRHNWTyt5a2I4VitXdjRLWEdpVEdJNTd0SHB0cnVHdkpBb0dCQU1KZTVsMWgKY2xmUHdTZ09uTFdaZWxUSzlxNlMwU0RpeUdseEhxTlpNVW5lWXV1d2ZISWtoZkVJS1BmYTNLZnJ5a2VxYWtwTApWMjFtU3VHaXNIVjJ4T0pPWU5sY3JVcjVzTTdRTzIvYkdmWFl4T3FNVGdHMlJ3WFBkTkUzL3c2Mmd1MmNseVJ2CjErTmZEMjcwRlZxcGhzRWdhTVVjL2MyUWFtZTNUcXliQXJsUkFvR0FFamJVRmR3c2N1ckppK3cxQjRnR3dxT2MKRlhLTnFlU01QY1o2OVlUYjAzOXByWS94UXZHV2Zoc3JFdlFKR2dhRC9STWVpVzlmTjhhSXJtWUdla0l4NzdEcgp6eXpkTWN5WDJUVk1wWEdHcjJ6eVE4Ri9tN3JoT3BBYkR6M2ZQTTQ3Mi9ib2tmV0tRWm5BUlo5NkpQU3lOSmp2CmEzK0ZFbGVJeDdxWTFkK3B5NUVDZ1lCT2VueXV4WEtpYTlyRWJxbnRWTXVrd3RJNUNFUng3NzhWZTd2d0hrb2QKVmpKQWtXQ2R3WXRuRjNGYktiNGYrcjhRa29rWitET1RrMUsycWJadnB3VzFqZ25pbVYzS3dPZ1hpTklHeHNORApsVU5rcEVPMnd6OEg1SXg1RVEvbGcrRjNTTnRwdGRMSUZoQ29MdHNVWVJCc2w4WlZsL0FOK0xwTnFDQ1c1bnVDCkVRS0JnUURHd3k1L2lFVzM0bHY0UjdyRnJVL3R3ZUMyRDhMTEthUENuOWsrYXNkd3Z3ZDNJY0xyOTBTOHNBeE0KbU9TdWdOOWxCTWRkWmNLQnorRWJkTFV4Z1lFUVpWY2JmbldyaGxkMS90TkNZV0RPK1VQQWVFekQ5cFlQTXlDbgpLd3cralhOeHdzVm16akNXRUUrY0VvOUlTOXIxNlEzMXR1SE9CMG5nOHBqdTBFUlJCZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

kind: Secret
metadata:
  name: bootstrap-hub-kubeconfig
  namespace: open-cluster-management-agent
type: Opaque
